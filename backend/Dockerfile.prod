# Build stage
FROM node:18-alpine AS builder

WORKDIR /app

# Install pnpm
RUN npm install -g pnpm

# Copy package files
COPY package*.json ./
COPY pnpm-lock.yaml ./

# Install all dependencies
RUN pnpm install --frozen-lockfile

# Copy source code
COPY . .

# Build the application
RUN pnpm nx build api-server --prod

# Production stage
FROM node:18-alpine AS production

WORKDIR /app

# Install pnpm and required packages
RUN npm install -g pnpm
RUN apk add --no-cache curl

# Create app user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S kedge -u 1001

# Copy package files
COPY package*.json ./
COPY pnpm-lock.yaml ./

# Install production dependencies only
RUN pnpm install --prod --frozen-lockfile

# Copy built application from builder stage
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/packages/libs ./packages/libs
COPY --from=builder /app/nx.json ./
COPY --from=builder /app/tsconfig.base.json ./

# Create necessary directories
RUN mkdir -p /app/storage /app/logs /app/uploads
RUN chown -R kedge:nodejs /app

# Switch to non-root user
USER kedge

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:8718/api/v1/health || exit 1

# Expose port
EXPOSE 8718

# Start the application
CMD ["node", "dist/packages/apps/api-server/main.js"]